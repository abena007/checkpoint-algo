//---------------------algo with procedure
PROCEDURE dot_product(VAR ps:INTEGER,v1 : ARRAY_OF INTEGER[2];v2:ARRAY_OF INTEGER [2])
VAR

BEGIN
    ps:=(v1[0]*v2[0])+(v1[1]+v2[1])
END
ALGORITHM Dot Product
VAR
    n,ps:INTEGER:=0
    v1,v2:ARRAY_OF INTEGER [2]
BEGIN
    write("set the number of pairs vectors n ")
    read (n)
FOR i FROM 1 TO n STEP 1  DO
    write("plese enter Xv1 and Yv1")
    FOR j FROM 0 TO 1 STEP 1  DO
        read (v1[j]) 
    END_FOR
    write("plese enter Xv2 and Yv2")
    FOR j FROM 0 TO 1 STEP 1  DO
        read (v2[j])
    END_FOR
    dot_product(v1,v2)
    IF (ps==0) THEN
        write ("these vectors are orthogonal")
    ELSE
        write("these vectors are not orthogonal")
    END_IF
END_FOR

END
//----------------same algo but with the function 
FUNCTION dot_product(v1 : ARRAY_OF INTEGER[2];v2:ARRAY_OF INTEGER [2]) : INTEGER
VAR
BEGIN    
    RETURN ((v1[0]*v2[0])+(v1[1]+v2[1])) ;
END
ALGORITHM Dot Product
VAR
    n,ps:INTEGER:=0
    v1,v2:ARRAY_OF INTEGER [2]
BEGIN
    write("set the number of pairs vectors n ")
    read (n)
FOR i FROM 1 TO n STEP 1  DO
    write("plese enter Xv1 and Yv1")
    FOR j FROM 0 TO 1 STEP 1  DO
        read (v1[j]) 
    END_FOR
    write("plese enter Xv2 and Yv2")
    FOR j FROM 0 TO 1 STEP 1  DO
        read (v2[j])
    END_FOR
    ps:=dot_product(v1,v2)
    IF (ps==0) THEN
        write ("these vectors are orthogonal")
    ELSE
        write("these vectors are not orthogonal")
    END_IF
END_FOR

END